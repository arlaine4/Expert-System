C => E # C implies E
A + B + C => D # A and B and C implies D
A | K => C # A or K implies C
A + B => !F # A and not B implies F
C | !G => H # C or not G implies H
V ^ W => X # V xor W implies X
A + B => Y + (!Z + T) # A and B implies Y and Z
C | D => !(!X | V) + C # C or D implies X or V
#E + F => !V | X # E and F implies not V
A + B <=> C # A and B if and only if C
B=>Arthur
*7 => shit
(!(A + (X | V))) => R
(((Q | !((K | P + M))))) => J
=ABG # Initial facts : A, B and G are true. All others are false.
# If no facts are initially true, then a simple "=" followed
# by a newline is used
?GJVX # Queries : What are G, V and X ?





#(((Q | !((K | P + M))))) => J
# Q K P M + | ! |
# Q               =
# Q K             =
# Q K P           =
# Q K P M         =
# Q K P M +       =
# Q K     . |     =
# Q         . !   =
# Q           . | =
#               . =
